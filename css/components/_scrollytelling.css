/* Then find this rule and ensure it exists: */
.pillar-text-col {
    width: 50%;
    position: relative;
    z-index: 10;
    /* This padding will now create the correct spacing *inside* the column */
    padding: 0 4rem; 
}

/* ==========================================================
  DEFINITIVE SCROLLYTELLING LAYOUT (CORRECTED)
========================================================== */

/* The main container for the two-column effect. */
.scrolly-container {
    display: flex;
    align-items: flex-start; /* CRITICAL for sticky positioning in flexbox */
}

/* The left column that holds the 3D canvas. It will be STICKY. */
.pillar-visuals-col {
    position: -webkit-sticky; /* Required for Safari */
    position: sticky;
    top: 0;
    width: 50%;             
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
}

#threejs-canvas {
    width: 500px;
    height: 500px;
    max-width: 100%;
}

/* The right column that holds the scrolling text. */
.pillar-text-col {
    width: 50%;
    position: relative; 
    z-index: 10;
    padding: 0 5%; /* Adds breathing room for the text */
}

/* Each individual text section. These create the scroll distance. */
.pillar-text-content {
    min-height: 85vh; /* This creates the scrollable distance */
    display: flex;
    flex-direction: column;
    justify-content: center;
}

/* The text wrapper itself. */
.text-anim-wrapper {
    max-width: 550px;
    margin: 0 auto; /* Horizontally center the text block */
}

/* --- Mobile & Responsive Fallback --- */
@media (max-width: 1024px) {
    .scrolly-container {
        flex-direction: column;
        align-items: center; /* Center items when in a column */
    }

    .pillar-visuals-col, 
    .pillar-text-col {
        width: 100%;
        position: relative; /* Reset sticky positioning */
        top: auto;
        padding: 0 5%; /* Ensure padding is consistent on mobile */
    }

    .pillar-visuals-col {
        height: 50vh;
        margin-bottom: 2rem;
    }

    .pillar-text-content {
        min-height: auto; /* On mobile, let content define height */
        padding-top: 4rem;
        padding-bottom: 4rem;
    }
}
